****README*****

# üì¶ Banco de Dados - Sistema de Monitoramento de Consumo Energ√©tico

Este banco de dados foi projetado para armazenar informa√ß√µes relacionadas ao monitoramento de consumo de energia em uma resid√™ncia inteligente. Ele inclui usu√°rios, sensores, dados dos sensores, registros de consumo, metas de economia, desempenho, recompensas e hist√≥rico de resgates.

---

## üßë‚Äçüíº Tabela: `USUARIO`

Armazena os dados dos usu√°rios do sistema.

| Coluna     | Tipo           | Descri√ß√£o                           |
|------------|----------------|-------------------------------------|
| id_usuario | INT (PK)       | Identificador √∫nico do usu√°rio      |
| nome       | VARCHAR(50)    | Nome completo                       |
| renda      | DECIMAL(10,2)  | Renda mensal                        |
| email      | VARCHAR(50)    | Endere√ßo de e-mail                  |

---

## üîß Tabela: `SENSOR`

Registra os sensores instalados nas resid√™ncias dos usu√°rios.

| Coluna     | Tipo     | Descri√ß√£o                            |
|------------|----------|----------------------------------------|
| id_sensor  | INT (PK) | Identificador √∫nico do sensor          |
| id_usuario | INT (FK) | Chave estrangeira para `USUARIO`       |

---

## üìä Tabela: `DADOS_SENSOR`

Armazena as leituras captadas pelos sensores.

| Coluna          | Tipo         | Descri√ß√£o                                      |
|------------------|--------------|-----------------------------------------------|
| id_dado          | INT (PK)     | Identificador √∫nico do dado                   |
| id_sensor        | INT (FK)     | Chave estrangeira para `SENSOR`               |
| tipo             | VARCHAR(50)  | Tipo do dado (temperatura, umidade, etc.)     |
| data_TimeStamp   | DATE         | Data da leitura                               |
| hora_TimeStamp   | TIME         | Hora da leitura                               |
| movimento        | BOOLEAN      | Indica detec√ß√£o de movimento (true/false)     |

---

## ‚ö° Tabela: `CONSUMO`

Registra o consumo de energia por sensor e por usu√°rio.

| Coluna      | Tipo           | Descri√ß√£o                                |
|-------------|----------------|------------------------------------------|
| id_consumo  | INT (PK)       | Identificador √∫nico do registro          |
| data        | DATE           | Data do consumo                          |
| valor_kWh   | DECIMAL(10,2)  | Quantidade de energia consumida (kWh)    |
| id_sensor   | INT (FK)       | Sensor respons√°vel pelo consumo          |
| id_usuario  | INT (FK)       | Usu√°rio associado ao consumo             |

---

## üéØ Tabela: `METAS`

Define metas de economia de energia.

| Coluna          | Tipo           | Descri√ß√£o                                 |
|------------------|----------------|-------------------------------------------|
| id_meta          | INT (PK)       | Identificador √∫nico da meta               |
| descricao        | VARCHAR(100)   | Descri√ß√£o da meta                         |
| valor_meta_kWh   | DECIMAL(10,2)  | Valor de consumo a ser atingido (kWh)     |
| data_limite      | DATE           | Data limite para atingir a meta           |

---

## üìà Tabela: `ECONOMIZA`

Relaciona usu√°rios com metas e registra o desempenho em rela√ß√£o √†s metas.

| Coluna      | Tipo        | Descri√ß√£o                                     |
|-------------|-------------|-----------------------------------------------|
| id_usuario  | INT (PK, FK)| Usu√°rio que participa da meta                 |
| id_meta     | INT (PK, FK)| Meta relacionada                              |
| id_consumo  | INT (FK)    | Registro de consumo usado na avalia√ß√£o        |
| desempenho  | FLOAT       | Percentual de desempenho alcan√ßado            |

---

## üèÜ Tabela: `RECOMPENSA`

Define recompensas dispon√≠veis para os usu√°rios.

| Coluna          | Tipo           | Descri√ß√£o                          |
|------------------|----------------|------------------------------------|
| id_recompensa    | INT (PK)       | Identificador √∫nico da recompensa |
| nome_recompensa  | VARCHAR(100)   | Nome da recompensa                |
| custo_pontos     | INT            | Custo da recompensa em pontos     |

---

## üéÅ Tabela: `USUARIO_RECOMPENSA`

Hist√≥rico de recompensas recebidas pelos usu√°rios.

| Coluna           | Tipo           | Descri√ß√£o                                     |
|------------------|----------------|-----------------------------------------------|
| id_usuario       | INT (PK, FK)   | Usu√°rio que recebeu a recompensa              |
| id_recompensa    | INT (PK, FK)   | Recompensa recebida                           |
| data_recebimento | DATE (PK)      | Data em que a recompensa foi recebida         |

---

## üîó Relacionamentos

- `USUARIO` 1Ô∏è‚É£‚ûùüîÅ `SENSOR`
- `SENSOR` 1Ô∏è‚É£‚ûùüîÅ `DADOS_SENSOR`
- `USUARIO` 1Ô∏è‚É£‚ûùüîÅ `CONSUMO`
- `SENSOR` 1Ô∏è‚É£‚ûùüîÅ `CONSUMO`
- `USUARIO` üîÅ‚õìÔ∏èüîÅ `METAS` via `ECONOMIZA`
- `USUARIO` üîÅ‚õìÔ∏èüîÅ `RECOMPENSA` via `USUARIO_RECOMPENSA`

---

> Documenta√ß√£o gerada automaticamente ‚ú®

# **Banco de Dados - C√≥digo**


CREATE TABLE USUARIO (
id_usuario INT AUTO_INCREMENT,
nome VARCHAR(50) NOT NULL,
renda DECIMAL(10,2),
email VARCHAR(50),
PRIMARY KEY (id_usuario)
);



CREATE TABLE SENSOR (
id_sensor INT AUTO_INCREMENT,
id_usuario INT,
PRIMARY KEY (id_sensor),
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario)
);



CREATE TABLE DADOS_SENSOR (
id_dado INT AUTO_INCREMENT,
id_sensor INT,
tipo VARCHAR(50) NOT NULL,
PRIMARY KEY (id_dado),
FOREIGN KEY (id_sensor) REFERENCES SENSOR(id_sensor)

ALTER TABLE DADOS_SENSOR
ADD COLUMN data_TimeStamp DATE NOT NULL;

ALTER TABLE DADOS_SENSOR
ADD COLUMN hora_TimeStamp TIME NOT NULL;

);




ALTER TABLE DADOS_SENSOR
ADD COLUMN movimento BOOLEAN NOT NULL DEFAULT FALSE;

CREATE TABLE CONSUMO (
id_consumo INT AUTO_INCREMENT,
data DATE NOT NULL,
valor_kWh DECIMAL(10,2) NOT NULL,
id_sensor INT,
id_usuario INT,
PRIMARY KEY (id_consumo),
FOREIGN KEY (id_sensor) REFERENCES SENSOR(id_sensor),
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario)
);




CREATE TABLE METAS (
id_meta INT AUTO_INCREMENT,
descricao VARCHAR(100),
valor_meta_kWh DECIMAL(10,2),
data_limite DATE,
PRIMARY KEY (id_meta)
);




CREATE TABLE ECONOMIZA (
id_usuario INT,
id_meta INT,
id_consumo INT,
desempenho FLOAT,
PRIMARY KEY (id_usuario, id_meta),
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
FOREIGN KEY (id_meta) REFERENCES METAS(id_meta),
FOREIGN KEY (id_consumo) REFERENCES CONSUMO(id_consumo)
);



CREATE TABLE RECOMPENSA (
id_recompensa INT AUTO_INCREMENT,
nome_recompensa VARCHAR(100),
custo_pontos INT,
PRIMARY KEY (id_recompensa)
);


CREATE TABLE USUARIO_RECOMPENSA (
id_usuario INT,
id_recompensa INT,
data_recebimento DATE,
PRIMARY KEY (id_usuario, id_recompensa, data_recebimento),
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
FOREIGN KEY (id_recompensa) REFERENCES RECOMPENSA(id_recompensa)
);
